# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Confirm the expected cli
      run: |
        set -x
        for f in animate compare composite conjure convert display identify import mogrify montage stream;do
          echo $f
          $f -version | grep 'Version: ImageMagick' || exit 1
        done
        pkg-config --cflags --libs MagickWand
    
    - name: build magic-core
      run: |
        cat <<EOT >main.c
        #include "magic.h"
        #include <stdio.h>
        
        int main() {
          int ver=magic_version();
          printf("magic_version returns %d\n", ver);
        }
        EOT
        gcc main.c -lmagic -o test
        ./test
    
    - name: build magic-wand
      run: |
        cat <<EOT >main.c
        #include "wand/magick_wand.h"
        #include <stdio.h>
        
        int main() {
          MagickCoreGenesis(path,MagickFalse);
        }
        EOT
        echo "gcc main.c `pkg-config --cflags --libs MagickWand` -o test"
        gcc main.c `pkg-config --cflags --libs MagickWand` -o test
        ./test
