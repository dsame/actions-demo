# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: dotnet info
      run: |
        dotnet --info
    
    - name: instal dotnet-core-uninstall 
      run: |
        curl --output dotnet-core-uninstall.msi -L https://github.com/dotnet/cli-lab/releases/download/1.2.206301/dotnet-core-uninstall-1.2.206301.msi
        $ArgumentList = ('/i', 'dotnet-core-uninstall.msi', '/QN', '/norestart', '/l*', 'i.log')
        Start-Process -FilePath 'mciexec.exe' -ArgumentList $ArgumentList -Wait -PassThru
        $exitCode = $process.ExitCode
        if ($exitCode -eq 0 -or $exitCode -eq 3010) {
            Write-Host "Installation successful"
            Get-Content -Path i.log
        } else {
            Write-Host "Non zero exit code returned by the installation process: $exitCode"
            Get-Content -Path i.log
            exit $exitCode
        }
        
        dotnet-core-uninstall list
    #- name: instal cicd 
    #  run: |
    #    dotnet --version
    #    dotnet --list-sdks
        #npm install -g azure-streamanalytics-cicd
     #   npm install azure-streamanalytics-cicd

    #- name: instal dotnet-trace
    #  run: |
    #    dir
        #dotnet tool install --global dotnet-trace
    
    #- name: run in fg
    #  shell: bash
    #  run: |
    #    pwd
    #    dotnet node_modules/azure-streamanalytics-cicd/bin/LocalRunService.dll
        #nohup dotnet node_modules/azure-streamanalytics-cicd/bin/LocalRunService.dll &

   # - name: trace
   #   shell: bash
   #   run: |
        #dotnet-trace ps | awk '/dotnet.exe/ {print $1}'
        #pid=$(dotnet-trace ps | awk '/dotnet.exe/ {print $1}')
        #echo "pid=$pid"
        #dotnet-trace collect --process-id $pid
        #start /b dotnet node_modules/azure-streamanalytics-cicd/bin/LocalRunService.dll
        #azure-streamanalytics-cicd --verbose
        #diff azure-streamanalytics-cicd ./node_modules/.bin/azure-streamanalytics-cicd
        #cat ./node_modules/.bin/azure-streamanalytics-cicd
        #echo "====="
        #cat ./node_modules/azure-streamanalytics-cicd/lib/main.js
        #cp azure-streamanalytics-cicd ./node_modules/.bin/azure-streamanalytics-cicd
        #./node_modules/.bin/azure-streamanalytics-cicd

  #  - name: build
  #    shell: bash
  #    run: |
  #      #./node_modules/.bin/azure-streamanalytics-cicd build -project D:\a\actions-demo\actions-demo\ASASample
